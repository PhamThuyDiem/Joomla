/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
version = '1.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.8.0'
	
	//testNG
	compile fileTree(dir: 'libs', include: ['*.jar'])
	
	compile "org.apache.poi:poi:3.17"
	compile "org.apache.poi:poi-ooxml:3.17"
}

test {
    useTestNG() {
        suites 'src/test/java/testRun/testNG.xml'
    }
    
    maxParallelForks=1
    
    onOutput { descriptor, event ->
        logger.lifecycle(event.message )
     }
}

task testArticles(type: Test) {
	useTestNG() {
        suites '/src/test/java/testRun/testArticlesPage.xml'
    }
    maxParallelForks=1
    onOutput { descriptor, event ->
        logger.lifecycle(event.message )
     }
}

task testBanners(type: Test) {
	useTestNG() {
        suites '/src/test/java/testRun/testBannersPage.xml'
    }
    maxParallelForks=1
    onOutput { descriptor, event ->
        logger.lifecycle(event.message )
     }
}



